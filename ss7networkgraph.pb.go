// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss7networkgraph.proto

package ss7networkgraph

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SS7PCRelation struct {
	OPC                  string   `protobuf:"bytes,1,opt,name=OPC,proto3" json:"OPC,omitempty"`
	DPC                  string   `protobuf:"bytes,2,opt,name=DPC,proto3" json:"DPC,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SS7PCRelation) Reset()         { *m = SS7PCRelation{} }
func (m *SS7PCRelation) String() string { return proto.CompactTextString(m) }
func (*SS7PCRelation) ProtoMessage()    {}
func (*SS7PCRelation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e26b716515b541d8, []int{0}
}

func (m *SS7PCRelation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SS7PCRelation.Unmarshal(m, b)
}
func (m *SS7PCRelation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SS7PCRelation.Marshal(b, m, deterministic)
}
func (m *SS7PCRelation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SS7PCRelation.Merge(m, src)
}
func (m *SS7PCRelation) XXX_Size() int {
	return xxx_messageInfo_SS7PCRelation.Size(m)
}
func (m *SS7PCRelation) XXX_DiscardUnknown() {
	xxx_messageInfo_SS7PCRelation.DiscardUnknown(m)
}

var xxx_messageInfo_SS7PCRelation proto.InternalMessageInfo

func (m *SS7PCRelation) GetOPC() string {
	if m != nil {
		return m.OPC
	}
	return ""
}

func (m *SS7PCRelation) GetDPC() string {
	if m != nil {
		return m.DPC
	}
	return ""
}

func (m *SS7PCRelation) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*SS7PCRelation)(nil), "ss7networkgraph.SS7PCRelation")
}

func init() {
	proto.RegisterFile("ss7networkgraph.proto", fileDescriptor_e26b716515b541d8)
}

var fileDescriptor_e26b716515b541d8 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x2e, 0x36, 0xcf,
	0x4b, 0x2d, 0x29, 0xcf, 0x2f, 0xca, 0x4e, 0x2f, 0x4a, 0x2c, 0xc8, 0xd0, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x47, 0x13, 0x96, 0x92, 0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x4b,
	0x27, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16, 0x94, 0x54, 0x42, 0x54, 0x2b, 0xb9, 0x73, 0xf1, 0x06,
	0x07, 0x9b, 0x07, 0x38, 0x07, 0xa5, 0xe6, 0x24, 0x96, 0x64, 0xe6, 0xe7, 0x09, 0x09, 0x70, 0x31,
	0xfb, 0x07, 0x38, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x20, 0x11, 0x97, 0x00,
	0x67, 0x09, 0x26, 0x88, 0x88, 0x4b, 0x80, 0xb3, 0x90, 0x10, 0x17, 0x4b, 0x48, 0x65, 0x41, 0xaa,
	0x04, 0x33, 0x58, 0x08, 0xcc, 0x36, 0x0a, 0xe4, 0x62, 0xf3, 0xc9, 0x4f, 0x4c, 0x49, 0x2d, 0x12,
	0x72, 0xe7, 0xe2, 0x76, 0xaa, 0x0c, 0xc8, 0xcf, 0xcc, 0x2b, 0x71, 0xce, 0x4f, 0x49, 0x15, 0x92,
	0xd3, 0x43, 0x77, 0x27, 0x8a, 0x85, 0x52, 0x62, 0x7a, 0x10, 0xf7, 0xe9, 0xc1, 0xdc, 0xa7, 0xe7,
	0x0a, 0x72, 0x9f, 0x12, 0x43, 0x12, 0x1b, 0x58, 0xc4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x86,
	0x3d, 0x19, 0xe1, 0xe9, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoaderClient is the client API for Loader service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoaderClient interface {
	ByPointCode(ctx context.Context, in *SS7PCRelation, opts ...grpc.CallOption) (*empty.Empty, error)
}

type loaderClient struct {
	cc grpc.ClientConnInterface
}

func NewLoaderClient(cc grpc.ClientConnInterface) LoaderClient {
	return &loaderClient{cc}
}

func (c *loaderClient) ByPointCode(ctx context.Context, in *SS7PCRelation, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/ss7networkgraph.Loader/ByPointCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoaderServer is the server API for Loader service.
type LoaderServer interface {
	ByPointCode(context.Context, *SS7PCRelation) (*empty.Empty, error)
}

// UnimplementedLoaderServer can be embedded to have forward compatible implementations.
type UnimplementedLoaderServer struct {
}

func (*UnimplementedLoaderServer) ByPointCode(ctx context.Context, req *SS7PCRelation) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ByPointCode not implemented")
}

func RegisterLoaderServer(s *grpc.Server, srv LoaderServer) {
	s.RegisterService(&_Loader_serviceDesc, srv)
}

func _Loader_ByPointCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SS7PCRelation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoaderServer).ByPointCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ss7networkgraph.Loader/ByPointCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoaderServer).ByPointCode(ctx, req.(*SS7PCRelation))
	}
	return interceptor(ctx, in, info, handler)
}

var _Loader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ss7networkgraph.Loader",
	HandlerType: (*LoaderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ByPointCode",
			Handler:    _Loader_ByPointCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ss7networkgraph.proto",
}
